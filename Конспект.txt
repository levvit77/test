Урок 1:
  git config - утилита для вывода и зменения конф-ии для работы Git и внешнего вида
  
  Уровни конф-ии:
    - Уровень системы: общие для всех пользователей --system
	- Уровень пользователя: настройки конкретного пользователя --global
	- Уровень проекта: (.git/config) в репозитории проекта
	
  Настройки на каждом след. уровне перекрывают настройки из предыдущих уровней. То есть значение .git/config перекрывают конфигурацию уровня системы.
  
  Примеры:
    git config --global user.name "levvit"
	git config --global user.email levvit77@gmail.com
	git config --list
	
Урок 2:
  !!!!! git help - помощь !!!!!
  
  Перейти в каталог где будет репозиторий (с помощью cd).
	git status - статус репозитория.
	git init - инициализация репозитория.
	
	git log - лог изменений в репозитории
	git log -nN - показать N последних изменений
	git log -p - лог изменений в репозитории с самими изменениями
	git log --grep <Shablon poiska> - поиск изменений в логе по частичному вхождению в описании
	git diff - незакоммиченные изменения (между лок репозиторием и проиндексированной областью)
	
	git add <filename> - добавление файла в индекс.
	git add . - добавление всех файлов с изменениями в индекс.
	git commit - делает коммит проиндексированных изменений
	git commit -m "Comment" - делает коммит с комментарием из консоли
	git commit -a -m "Comment" - добавление в индекс и коммит
	
	git checkout <hashId> - переход к состоянию ветки в момент hashId
	
	clear - очистка консоли
	
Урок 3:
  git diff --staged - незакоммиченные изменения (между лок репозиторием и закоммиченным областью)
	или git diff --cached
	
  git rm <filename> - удаляет файл из рабочей директории и добавляет изменение в проиндексированную область 
  git mv "<filename>" <new_filename> - переименовывает файл и добавляет изменение в проиндексированную область 
  
Урок 4:
  git restore <filename> - откатывает изменение в не проиндесированном файле
  git restore --staged <filename> - откатывает изменение в проиндесированном файле
  --
  git commit -amend -m "Comment text" - слияние последнего коммита с изменениями в проиндексированной области и/или изменение текста комментария. При выполнении данной команды хэш последнего коммита изменяется.
  git show <First4LetterOfHashID> - показывает изменения коммита по первым 4 символам хэш id 